# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _capi.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_capi', [dirname(__file__)])
        except ImportError:
            import _capi
            return _capi
        if fp is not None:
            try:
                _mod = imp.load_module('_capi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _capi = swig_import_helper()
    del swig_import_helper
else:
    import _capi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def team_hwaddr_set(*args):
  return _capi.team_hwaddr_set(*args)
team_hwaddr_set = _capi.team_hwaddr_set

def team_hwaddr_get(*args):
  return _capi.team_hwaddr_get(*args)
team_hwaddr_get = _capi.team_hwaddr_get

def py_team_change_handler_register(*args):
  return _capi.py_team_change_handler_register(*args)
py_team_change_handler_register = _capi.py_team_change_handler_register

def py_team_change_handler_unregister(*args):
  return _capi.py_team_change_handler_unregister(*args)
py_team_change_handler_unregister = _capi.py_team_change_handler_unregister

def team_alloc():
  return _capi.team_alloc()
team_alloc = _capi.team_alloc

def team_create(*args):
  return _capi.team_create(*args)
team_create = _capi.team_create

def team_recreate(*args):
  return _capi.team_recreate(*args)
team_recreate = _capi.team_recreate

def team_destroy(*args):
  return _capi.team_destroy(*args)
team_destroy = _capi.team_destroy

def team_init(*args):
  return _capi.team_init(*args)
team_init = _capi.team_init

def team_free(*args):
  return _capi.team_free(*args)
team_free = _capi.team_free

def team_refresh(*args):
  return _capi.team_refresh(*args)
team_refresh = _capi.team_refresh

def team_set_log_fn(*args):
  return _capi.team_set_log_fn(*args)
team_set_log_fn = _capi.team_set_log_fn

def team_get_log_priority(*args):
  return _capi.team_get_log_priority(*args)
team_get_log_priority = _capi.team_get_log_priority

def team_set_log_priority(*args):
  return _capi.team_set_log_priority(*args)
team_set_log_priority = _capi.team_set_log_priority

def team_get_event_fd(*args):
  return _capi.team_get_event_fd(*args)
team_get_event_fd = _capi.team_get_event_fd

def team_handle_events(*args):
  return _capi.team_handle_events(*args)
team_handle_events = _capi.team_handle_events

def team_check_events(*args):
  return _capi.team_check_events(*args)
team_check_events = _capi.team_check_events

def team_get_mode_name(*args):
  return _capi.team_get_mode_name(*args)
team_get_mode_name = _capi.team_get_mode_name

def team_set_mode_name(*args):
  return _capi.team_set_mode_name(*args)
team_set_mode_name = _capi.team_set_mode_name

def team_get_notify_peers_count(*args):
  return _capi.team_get_notify_peers_count(*args)
team_get_notify_peers_count = _capi.team_get_notify_peers_count

def team_set_notify_peers_count(*args):
  return _capi.team_set_notify_peers_count(*args)
team_set_notify_peers_count = _capi.team_set_notify_peers_count

def team_get_notify_peers_interval(*args):
  return _capi.team_get_notify_peers_interval(*args)
team_get_notify_peers_interval = _capi.team_get_notify_peers_interval

def team_set_notify_peers_interval(*args):
  return _capi.team_set_notify_peers_interval(*args)
team_set_notify_peers_interval = _capi.team_set_notify_peers_interval

def team_get_mcast_rejoin_count(*args):
  return _capi.team_get_mcast_rejoin_count(*args)
team_get_mcast_rejoin_count = _capi.team_get_mcast_rejoin_count

def team_set_mcast_rejoin_count(*args):
  return _capi.team_set_mcast_rejoin_count(*args)
team_set_mcast_rejoin_count = _capi.team_set_mcast_rejoin_count

def team_get_mcast_rejoin_interval(*args):
  return _capi.team_get_mcast_rejoin_interval(*args)
team_get_mcast_rejoin_interval = _capi.team_get_mcast_rejoin_interval

def team_set_mcast_rejoin_interval(*args):
  return _capi.team_set_mcast_rejoin_interval(*args)
team_set_mcast_rejoin_interval = _capi.team_set_mcast_rejoin_interval

def team_get_active_port(*args):
  return _capi.team_get_active_port(*args)
team_get_active_port = _capi.team_get_active_port

def team_set_active_port(*args):
  return _capi.team_set_active_port(*args)
team_set_active_port = _capi.team_set_active_port

def team_get_bpf_hash_func(*args):
  return _capi.team_get_bpf_hash_func(*args)
team_get_bpf_hash_func = _capi.team_get_bpf_hash_func

def team_set_bpf_hash_func(*args):
  return _capi.team_set_bpf_hash_func(*args)
team_set_bpf_hash_func = _capi.team_set_bpf_hash_func

def team_set_port_enabled(*args):
  return _capi.team_set_port_enabled(*args)
team_set_port_enabled = _capi.team_set_port_enabled

def team_set_port_user_linkup_enabled(*args):
  return _capi.team_set_port_user_linkup_enabled(*args)
team_set_port_user_linkup_enabled = _capi.team_set_port_user_linkup_enabled

def team_get_port_user_linkup(*args):
  return _capi.team_get_port_user_linkup(*args)
team_get_port_user_linkup = _capi.team_get_port_user_linkup

def team_set_port_user_linkup(*args):
  return _capi.team_set_port_user_linkup(*args)
team_set_port_user_linkup = _capi.team_set_port_user_linkup

def team_set_port_queue_id(*args):
  return _capi.team_set_port_queue_id(*args)
team_set_port_queue_id = _capi.team_set_port_queue_id

def team_get_port_priority(*args):
  return _capi.team_get_port_priority(*args)
team_get_port_priority = _capi.team_get_port_priority

def team_set_port_priority(*args):
  return _capi.team_set_port_priority(*args)
team_set_port_priority = _capi.team_set_port_priority

def team_get_ifinfo(*args):
  return _capi.team_get_ifinfo(*args)
team_get_ifinfo = _capi.team_get_ifinfo

def team_get_next_eventfd(*args):
  return _capi.team_get_next_eventfd(*args)
team_get_next_eventfd = _capi.team_get_next_eventfd

def team_get_eventfd_fd(*args):
  return _capi.team_get_eventfd_fd(*args)
team_get_eventfd_fd = _capi.team_get_eventfd_fd

def team_call_eventfd_handler(*args):
  return _capi.team_call_eventfd_handler(*args)
team_call_eventfd_handler = _capi.team_call_eventfd_handler

def team_get_next_port(*args):
  return _capi.team_get_next_port(*args)
team_get_next_port = _capi.team_get_next_port

def team_get_port_ifindex(*args):
  return _capi.team_get_port_ifindex(*args)
team_get_port_ifindex = _capi.team_get_port_ifindex

def team_get_port_speed(*args):
  return _capi.team_get_port_speed(*args)
team_get_port_speed = _capi.team_get_port_speed

def team_get_port_duplex(*args):
  return _capi.team_get_port_duplex(*args)
team_get_port_duplex = _capi.team_get_port_duplex

def team_is_port_link_up(*args):
  return _capi.team_is_port_link_up(*args)
team_is_port_link_up = _capi.team_is_port_link_up

def team_is_port_changed(*args):
  return _capi.team_is_port_changed(*args)
team_is_port_changed = _capi.team_is_port_changed

def team_is_port_removed(*args):
  return _capi.team_is_port_removed(*args)
team_is_port_removed = _capi.team_is_port_removed

def team_get_port_ifinfo(*args):
  return _capi.team_get_port_ifinfo(*args)
team_get_port_ifinfo = _capi.team_get_port_ifinfo

def team_is_port_present(*args):
  return _capi.team_is_port_present(*args)
team_is_port_present = _capi.team_is_port_present

def team_get_next_ifinfo(*args):
  return _capi.team_get_next_ifinfo(*args)
team_get_next_ifinfo = _capi.team_get_next_ifinfo

def team_is_ifinfo_removed(*args):
  return _capi.team_is_ifinfo_removed(*args)
team_is_ifinfo_removed = _capi.team_is_ifinfo_removed

def team_get_ifinfo_ifindex(*args):
  return _capi.team_get_ifinfo_ifindex(*args)
team_get_ifinfo_ifindex = _capi.team_get_ifinfo_ifindex

def team_get_ifinfo_port(*args):
  return _capi.team_get_ifinfo_port(*args)
team_get_ifinfo_port = _capi.team_get_ifinfo_port

def team_get_ifinfo_hwaddr(*args):
  return _capi.team_get_ifinfo_hwaddr(*args)
team_get_ifinfo_hwaddr = _capi.team_get_ifinfo_hwaddr

def team_is_ifinfo_hwaddr_changed(*args):
  return _capi.team_is_ifinfo_hwaddr_changed(*args)
team_is_ifinfo_hwaddr_changed = _capi.team_is_ifinfo_hwaddr_changed

def team_get_ifinfo_hwaddr_len(*args):
  return _capi.team_get_ifinfo_hwaddr_len(*args)
team_get_ifinfo_hwaddr_len = _capi.team_get_ifinfo_hwaddr_len

def team_is_ifinfo_hwaddr_len_changed(*args):
  return _capi.team_is_ifinfo_hwaddr_len_changed(*args)
team_is_ifinfo_hwaddr_len_changed = _capi.team_is_ifinfo_hwaddr_len_changed

def team_get_ifinfo_orig_hwaddr(*args):
  return _capi.team_get_ifinfo_orig_hwaddr(*args)
team_get_ifinfo_orig_hwaddr = _capi.team_get_ifinfo_orig_hwaddr

def team_get_ifinfo_orig_hwaddr_len(*args):
  return _capi.team_get_ifinfo_orig_hwaddr_len(*args)
team_get_ifinfo_orig_hwaddr_len = _capi.team_get_ifinfo_orig_hwaddr_len

def team_get_ifinfo_ifname(*args):
  return _capi.team_get_ifinfo_ifname(*args)
team_get_ifinfo_ifname = _capi.team_get_ifinfo_ifname

def team_is_ifinfo_ifname_changed(*args):
  return _capi.team_is_ifinfo_ifname_changed(*args)
team_is_ifinfo_ifname_changed = _capi.team_is_ifinfo_ifname_changed

def team_get_ifinfo_master_ifindex(*args):
  return _capi.team_get_ifinfo_master_ifindex(*args)
team_get_ifinfo_master_ifindex = _capi.team_get_ifinfo_master_ifindex

def team_is_ifinfo_master_ifindex_changed(*args):
  return _capi.team_is_ifinfo_master_ifindex_changed(*args)
team_is_ifinfo_master_ifindex_changed = _capi.team_is_ifinfo_master_ifindex_changed

def team_get_ifinfo_phys_port_id(*args):
  return _capi.team_get_ifinfo_phys_port_id(*args)
team_get_ifinfo_phys_port_id = _capi.team_get_ifinfo_phys_port_id

def team_is_ifinfo_phys_port_id_changed(*args):
  return _capi.team_is_ifinfo_phys_port_id_changed(*args)
team_is_ifinfo_phys_port_id_changed = _capi.team_is_ifinfo_phys_port_id_changed

def team_get_ifinfo_phys_port_id_len(*args):
  return _capi.team_get_ifinfo_phys_port_id_len(*args)
team_get_ifinfo_phys_port_id_len = _capi.team_get_ifinfo_phys_port_id_len

def team_is_ifinfo_phys_port_id_len_changed(*args):
  return _capi.team_is_ifinfo_phys_port_id_len_changed(*args)
team_is_ifinfo_phys_port_id_len_changed = _capi.team_is_ifinfo_phys_port_id_len_changed

def team_is_ifinfo_changed(*args):
  return _capi.team_is_ifinfo_changed(*args)
team_is_ifinfo_changed = _capi.team_is_ifinfo_changed
TEAM_OPTION_TYPE_U32 = _capi.TEAM_OPTION_TYPE_U32
TEAM_OPTION_TYPE_STRING = _capi.TEAM_OPTION_TYPE_STRING
TEAM_OPTION_TYPE_BINARY = _capi.TEAM_OPTION_TYPE_BINARY
TEAM_OPTION_TYPE_BOOL = _capi.TEAM_OPTION_TYPE_BOOL
TEAM_OPTION_TYPE_S32 = _capi.TEAM_OPTION_TYPE_S32

def team_get_option(*args):
  return _capi.team_get_option(*args)
team_get_option = _capi.team_get_option

def team_get_next_option(*args):
  return _capi.team_get_next_option(*args)
team_get_next_option = _capi.team_get_next_option

def team_is_option_initialized(*args):
  return _capi.team_is_option_initialized(*args)
team_is_option_initialized = _capi.team_is_option_initialized

def team_get_option_name(*args):
  return _capi.team_get_option_name(*args)
team_get_option_name = _capi.team_get_option_name

def team_get_option_port_ifindex(*args):
  return _capi.team_get_option_port_ifindex(*args)
team_get_option_port_ifindex = _capi.team_get_option_port_ifindex

def team_is_option_per_port(*args):
  return _capi.team_is_option_per_port(*args)
team_is_option_per_port = _capi.team_is_option_per_port

def team_get_option_array_index(*args):
  return _capi.team_get_option_array_index(*args)
team_get_option_array_index = _capi.team_get_option_array_index

def team_is_option_array(*args):
  return _capi.team_is_option_array(*args)
team_is_option_array = _capi.team_is_option_array

def team_get_option_type(*args):
  return _capi.team_get_option_type(*args)
team_get_option_type = _capi.team_get_option_type

def team_is_option_changed(*args):
  return _capi.team_is_option_changed(*args)
team_is_option_changed = _capi.team_is_option_changed

def team_is_option_changed_locally(*args):
  return _capi.team_is_option_changed_locally(*args)
team_is_option_changed_locally = _capi.team_is_option_changed_locally

def team_get_option_value_len(*args):
  return _capi.team_get_option_value_len(*args)
team_get_option_value_len = _capi.team_get_option_value_len

def team_get_option_value_u32(*args):
  return _capi.team_get_option_value_u32(*args)
team_get_option_value_u32 = _capi.team_get_option_value_u32

def team_get_option_value_string(*args):
  return _capi.team_get_option_value_string(*args)
team_get_option_value_string = _capi.team_get_option_value_string

def team_get_option_value_binary(*args):
  return _capi.team_get_option_value_binary(*args)
team_get_option_value_binary = _capi.team_get_option_value_binary

def team_get_option_value_bool(*args):
  return _capi.team_get_option_value_bool(*args)
team_get_option_value_bool = _capi.team_get_option_value_bool

def team_get_option_value_s32(*args):
  return _capi.team_get_option_value_s32(*args)
team_get_option_value_s32 = _capi.team_get_option_value_s32

def team_set_option_value_u32(*args):
  return _capi.team_set_option_value_u32(*args)
team_set_option_value_u32 = _capi.team_set_option_value_u32

def team_set_option_value_string(*args):
  return _capi.team_set_option_value_string(*args)
team_set_option_value_string = _capi.team_set_option_value_string

def team_set_option_value_binary(*args):
  return _capi.team_set_option_value_binary(*args)
team_set_option_value_binary = _capi.team_set_option_value_binary

def team_set_option_value_bool(*args):
  return _capi.team_set_option_value_bool(*args)
team_set_option_value_bool = _capi.team_set_option_value_bool

def team_set_option_value_s32(*args):
  return _capi.team_set_option_value_s32(*args)
team_set_option_value_s32 = _capi.team_set_option_value_s32
TEAM_PORT_CHANGE = _capi.TEAM_PORT_CHANGE
TEAM_OPTION_CHANGE = _capi.TEAM_OPTION_CHANGE
TEAM_IFINFO_CHANGE = _capi.TEAM_IFINFO_CHANGE
TEAM_ANY_CHANGE = _capi.TEAM_ANY_CHANGE
class team_change_handler(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    func = _swig_property(_capi.team_change_handler_func_get, _capi.team_change_handler_func_set)
    type_mask = _swig_property(_capi.team_change_handler_type_mask_get, _capi.team_change_handler_type_mask_set)
    def __init__(self, *args): 
        _capi.team_change_handler_swiginit(self,_capi.new_team_change_handler(*args))
    __swig_destroy__ = _capi.delete_team_change_handler
team_change_handler_swigregister = _capi.team_change_handler_swigregister
team_change_handler_swigregister(team_change_handler)


def team_change_handler_register(*args):
  return _capi.team_change_handler_register(*args)
team_change_handler_register = _capi.team_change_handler_register

def team_change_handler_register_head(*args):
  return _capi.team_change_handler_register_head(*args)
team_change_handler_register_head = _capi.team_change_handler_register_head

def team_change_handler_unregister(*args):
  return _capi.team_change_handler_unregister(*args)
team_change_handler_unregister = _capi.team_change_handler_unregister

def team_option_value_str(*args):
  return _capi.team_option_value_str(*args)
team_option_value_str = _capi.team_option_value_str

def team_set_option_value_from_string(*args):
  return _capi.team_set_option_value_from_string(*args)
team_set_option_value_from_string = _capi.team_set_option_value_from_string

def team_option_str(*args):
  return _capi.team_option_str(*args)
team_option_str = _capi.team_option_str

def team_port_str(*args):
  return _capi.team_port_str(*args)
team_port_str = _capi.team_port_str

def team_ifinfo_str(*args):
  return _capi.team_ifinfo_str(*args)
team_ifinfo_str = _capi.team_ifinfo_str

def team_ifname2ifindex(*args):
  return _capi.team_ifname2ifindex(*args)
team_ifname2ifindex = _capi.team_ifname2ifindex

def team_ifindex2ifname(*args):
  return _capi.team_ifindex2ifname(*args)
team_ifindex2ifname = _capi.team_ifindex2ifname

def team_port_add(*args):
  return _capi.team_port_add(*args)
team_port_add = _capi.team_port_add

def team_port_remove(*args):
  return _capi.team_port_remove(*args)
team_port_remove = _capi.team_port_remove

def team_is_our_port(*args):
  return _capi.team_is_our_port(*args)
team_is_our_port = _capi.team_is_our_port

def team_carrier_set(*args):
  return _capi.team_carrier_set(*args)
team_carrier_set = _capi.team_carrier_set

def team_carrier_get(*args):
  return _capi.team_carrier_get(*args)
team_carrier_get = _capi.team_carrier_get

def team_hwaddr_len_get(*args):
  return _capi.team_hwaddr_len_get(*args)
team_hwaddr_len_get = _capi.team_hwaddr_len_get


